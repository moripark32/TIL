React Router is a standard library for routing in React. 
It enables the navigation among views of various components in a React Application, 
allows changing the browser URL, and keeps the UI in sync with the URL.

Routing is the ability to move between different parts of an application when a user enters a URL or 
clicks an element (link, button, icon, image etc) within the application. Up until this point, you have dealt with 
simple projects that do not require transitioning from one view to another, thus, you are yet to interact with Routing in React.
Often, there is no need to install the core react-router library by itself, but rather a choice is made between react-router-dom 
and react-router-native, depending on the situation. Both react-router-dom and react-router-native import all the functionality of 
the core react-router library.

The react-router package includes a number of routers that we can take advantage of depending on the platform we are targeting. 
These include BrowserRouter, HashRouter, and MemoryRouter. For the browser-based applications we are building, the BrowserRouter and HashRouter are a good fit.
The BrowserRouter is used for applications which have a dynamic server that knows how to handle any type of URL whereas the HashRouter is used for 
static websites with a server that only responds to requests for files that it knows about.

History
Each router creates a history object that it uses to keep track of the current location and re-renders the application whenever this location changes. 
For this reason, the other React Router components rely on this history object being present; which is why they need to be rendered inside a router.
The BrowserRouter uses the HTML5 history API to keep the user interface in sync with the URL in the browser address bar.
The history object created by the Router contains a number of properties and one of the location property whose value is also an object. 